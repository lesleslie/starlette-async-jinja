# AI-optimized pre-commit hooks for comprehensive analysis and structured output
# Designed for AI agent workflows with enhanced reporting and metrics

repos:
  # Group 1: File Structure & Format Validation (parallel-safe, fast)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        name: trailing-whitespace
        stages: [pre-commit]
      - id: end-of-file-fixer
        name: end-of-file-fixer
        stages: [pre-commit]
      - id: check-yaml
        name: check-yaml
        stages: [pre-commit]
      - id: check-toml
        name: check-toml
        stages: [pre-commit]
      - id: check-added-large-files
        name: check-added-large-files
        stages: [pre-commit]

  # Group 2: Project Configuration Management
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: v0.24.1
    hooks:
      - id: validate-pyproject
        stages: [pre-commit]

  - repo: https://github.com/tox-dev/pyproject-fmt
    rev: "v2.6.0"
    hooks:
      - id: pyproject-fmt
        args: ["-n"]
        stages: [pre-commit]

  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.7.21
    hooks:
      - id: uv-lock
        files: ^pyproject\.toml$
        stages: [pre-commit]

  # Group 3: Security (early detection, critical)
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        exclude: 'uv\.lock|pyproject\.toml|tests/.*|docs/.*|.*\.md'
        stages: [pre-commit]

  # Group 4: Code Quality & Style (fast formatting)
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        additional_dependencies:
          - tomli
        stages: [pre-commit]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.3
    hooks:
      - id: ruff-check
        args: ["--output-format=json", "--fix"]
        stages: [pre-commit]
      - id: ruff-format
        stages: [pre-commit]

  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.22
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-ruff
        stages: [pre-commit]

  # Group 5: Static Analysis (comprehensive, slower)
  - repo: https://github.com/jendrikseipp/vulture
    rev: 'v2.14'
    hooks:
      - id: vulture
        args: ["--verbose"]
        stages: [pre-commit]

  - repo: https://github.com/fredrikaverpil/creosote
    rev: v4.0.3
    hooks:
      - id: creosote
        args: ["--verbose"]
        stages: [pre-commit]

  - repo: https://github.com/rohaquinlop/complexipy-pre-commit
    rev: v3.0.0
    hooks:
      - id: complexipy
        args: ["-d", "low", "--output", "complexipy.json"]
        stages: [pre-commit]

  - repo: https://github.com/dosisod/refurb
    rev: v2.1.0
    hooks:
      - id: refurb
        args: ["--quiet"]
        stages: [pre-commit]

  # Group 6: Type Checking & Enhancement (most expensive)
  - repo: local
    hooks:
      - id: autotyping
        name: autotyping
        entry: python -m autotyping
        args:
          - --aggressive
          - --only-without-imports
          - --guess-common-names
          - --cache-dir=.autotyping-cache
          - --workers=4
          - --max-line-length=88
          - --exclude-name=test_*,conftest
          - starlette_async_jinja
        types_or: [ python, pyi ]
        language: python
        files: ^starlette_async_jinja/.*\.py$
        stages: [pre-commit]
        additional_dependencies:
          - autotyping>=24.3.0
          - libcst>=1.1.0

  - repo: https://github.com/PyCQA/bandit
    rev: '1.8.6'
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml", "-f", "json", "-o", "bandit-report.json", "-r", "-ll"]
        stages: [pre-commit]

  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.403
    hooks:
      - id: pyright
        args: ["--outputjson"]
        stages: [pre-commit]

  # Group 7: Documentation & Security Enhancement (AI-specific)
  # pydocstyle temporarily disabled - conflicts with code cleaning functionality
  # - repo: https://github.com/PyCQA/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
  #       args: ["--config=pyproject.toml"]
  #       stages: [pre-commit]
